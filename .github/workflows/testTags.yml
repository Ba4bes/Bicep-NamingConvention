# This is a basic workflow to help you get started with Actions

name: Tags Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  resourceGroupName: ArmdeploymentTest
  bicepfilePath: main.bicep
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: build Bicep file
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            az bicep build --file ${{ env.bicepfilePath }} --outfile ./main.json
      - name: Pester test
        shell: pwsh
        run: |
          $Data = @{
              TemplatePath     = './main.json'
              MandatoryTags    = @(
                  'Owner'
                  'CostCenter'
                  'Environment'
                  'DeploymentDate'
              )
              TagParameterName = 'tags'
              TagModuleName    = 'tagging'
          }
          $container = New-PesterContainer -Path '.\tests\tags.tests.ps1' -Data $Data
          $outputFile = ".\TEST-RESULTS.xml"
          $config = New-PesterConfiguration
          $config.TestResult.Enabled = $true
          $config.TestResult.OutputFormat = "NUnitXML"
          $config.TestResult.OutputPath = $outputFile
          $config.Output.Verbosity = "Detailed"
          $config.Run.PassThru = $true
          $config.Run.Container = $container
          
          Invoke-Pester -Configuration $config
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: ./TEST-RESULTS.xml